<?xml version="1.0"?>
<doc>
<assembly>
<name>
Fortedo.ForValidate
</name>
</assembly>
<members>
<member name="P:Fortedo.ForValidate.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Fortedo.ForValidate.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Fortedo.ForValidate.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:Fortedo.ForValidate.Wpf.FvProxy.GetProxy(System.Object)">
	<summary>
 Gets instance of proxy associated with the specified target object.
 </summary>
	<param name="target">The object which proxy is about to being get.</param>
	<returns>The proxy associated with the specified object, if found; otherwise, null (Nothing in VB). </returns>
	<remarks></remarks>
</member><member name="M:Fortedo.ForValidate.Wpf.FvProxy.Connect``1(System.Object)">
	<summary>
 Sets proxy for the specified target object and adds the specified validator to metadata of the proxy.
 </summary>
	<param name="target">The object which proxy is about to being set.</param>
	<returns>The proxy set by the method.</returns>
	<remarks>If a proxy for the specified target exists, the method does not create a new one, but changes associated validator only.</remarks>
</member><member name="P:Fortedo.ForValidate.Wpf.FvProxy.Target">
	<summary>
 Gets the target object of the proxy.
 </summary>
	<value></value>
	<returns>The target object of the proxy</returns>
	<remarks>target object is stored as a WeakReference to avoid memory leaks.</remarks>
</member><member name="M:Fortedo.ForValidate.Wpf.FvProxy.Validate">
	<summary>
 Validates the entire target object of the proxy using the validator associated with the proxy.
 </summary>
	<returns>Validation result containing possible errors collection.</returns>
	<remarks>Returned results contains both, the exception errors (from WPF) and the validation ones (from validator).</remarks>
</member><member name="M:Fortedo.ForValidate.Wpf.FvProxy.Validate(System.String)">
	<summary>
 Validates one of properties of target object specified by the property name. validation is executed using the validator associated with the proxy.
 </summary>
	<returns>Validation result containing possible errors collection.</returns>
	<remarks>Returned results contains both, the exception errors (from WPF) and the validation ones (from validator).</remarks>
</member><member name="T:Fortedo.ForValidate.Wpf.FvProxy">
	<summary>
 Represents a proxy to integrate Forvalidate framework with WPF.
 </summary>
	<remarks>Each Proxy object consists of metadata extending data model object bound to WPF UI elements.</remarks>
</member><member name="M:Fortedo.ForValidate.Wpf.FvBinding.#ctor">
	<summary>
 Initializes new instance of this class. UpdateSourceTrigger is set to PropertyChanged and TargetNullValue is set to String.Empty.
 </summary>
	<remarks></remarks>
</member><member name="M:Fortedo.ForValidate.Wpf.FvBinding.#ctor(System.String)">
	<summary>
 Initializes new instance of this class and set its Path property. UpdateSourceTrigger is set to PropertyChanged and TargetNullValue is set to String.Empty.
 </summary>
	<remarks></remarks>
</member><member name="T:Fortedo.ForValidate.Wpf.FvBinding">
	<summary>
 Binding implementation providing support for Forvalidate integration with WPF (especially MVVM/MVP)
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>